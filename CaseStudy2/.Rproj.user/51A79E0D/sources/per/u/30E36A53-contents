##Read in data
results<-list()
for(i in 1:1000){
  results[[i]]<-eval(parse(text=paste0("readRDS('results/res",i,".RDS')")))
}

##Read in initial parameters
pars2<-readRDS("parameters2.RDS")

head(pars2)

##Function to extract posterior medians for all results

med_ext<-function(a){
  medians<-apply(a,2,median)
  return(medians)
}

posterior_medians<-lapply(results,med_ext)
posterior_medians2<-data.frame(do.call(rbind,posterior_medians))

names(posterior_medians2)<-c("Beta1","Beta2","Beta3","p")

head(pars2)

test_data<-data.frame(pars2[1:1000,],posterior_medians2)

head(test_data)

boxplot(Beta3~ng*net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength"&test_data$pmi==1,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta3~pcg*pmi,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta3~ng*pcg,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength"&test_data$net_effs==0.8&test_data$pmi<1,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta3~ng*pmi*pcg,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta3~ng*pmi,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(p~ng*pcg*pmi,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)

boxplot(Beta2-Beta1~ng*pcg*pmi,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.5,0.5),lty=2)

boxplot(Beta2-Beta1~ng*pcg*pmi,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength"&test_data$net_effs==0.8,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.5,0.5),lty=2)

boxplot(Beta2-Beta1~net_vars*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.5,0.5),lty=2)

boxplot(Beta2-Beta1~ng*net_vars*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.5,0.5),lty=2)

boxplot(Beta1~net_vars*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(boot::logit(0.8),boot::logit(0.8)),lty=2)

boxplot(Beta1~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(boot::logit(0.8),boot::logit(0.8)),lty=2)

