head(pars1)
med_ext<-function(a){
medians<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
medians[i,]<-apply(a[[i]],2,median)
}
return(medians)
}
posterior_medians<-lapply(results,med_ext)
lapply(results,medians)
lapply(results,median)
unlist(lapply(results,median))
a<-results[[1]]
a
class(a)
class(results)
med_ext<-function(a){
if(class(a)=="list"){
medians<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
medians[i,]<-apply(a[[i]],2,median)
}
}
if(class(a)!="list"){
medians<-apply(a,2,median)
}
return(medians)
}
posterior_medians<-lapply(results,med_ext)
posterior_medians
posterior_medians2<-data.frame(do.call(rbind,posterior_medians))
posterior_medians2
names(posterior_medians2)<-c("Beta1","Beta2","Beta3","p")
head(pars1)
pars1B<-pars1[rep(1:nrow(pars1),each=1),]
dft<-cbind(pars1B)
test_data<-data.frame(dft[1:1000,],posterior_medians2)
head(test_data)
boxplot(Beta3~net_effs*net_cov,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
##Read in data
results<-list()
for(i in 1:1000){
results[[i]]<-eval(parse(text=paste0("readRDS('results/res",i,".RDS')")))
}
##Read in initial parameters
pars1<-readRDS("parameters2.RDS")
head(pars1)
##Function to extract posterior medians for all results
med_ext<-function(a){
if(class(a)=="list"){
medians<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
medians[i,]<-apply(a[[i]],2,median)
}
}
if(class(a)!="list"){
medians<-apply(a,2,median)
}
return(medians)
}
sd_ext<-function(a){
if(class(a)=="list"){
sds<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
sds[i,]<-apply(a[[i]],2,sd)
}
}
if(class(a)!="list"){
sds<-apply(a,2,sd)
}
return(sds)
}
posterior_medians<-lapply(results,med_ext)
posterior_medians2<-data.frame(do.call(rbind,posterior_medians))
posterior_sds<-lapply(results,sd_ext)
posterior_sds2<-data.frame(do.call(rbind,posterior_sds))
##Read in data
results<-list()
for(i in 1:1000){
results[[i]]<-eval(parse(text=paste0("readRDS('results/res",i,".RDS')")))
}
##Read in initial parameters
pars1<-readRDS("parameters2.RDS")
head(pars1)
##Function to extract posterior medians for all results
med_ext<-function(a){
if(class(a)=="list"){
medians<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
medians[i,]<-apply(a[[i]],2,median)
}
}
if(class(a)!="list"){
medians<-apply(a,2,median)
}
return(medians)
}
sd_ext<-function(a){
if(class(a)=="list"){
sds<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
sds[i,]<-apply(a[[i]],2,sd)
}
}
if(class(a)!="list"){
sds<-apply(a,2,sd)
}
return(sds)
}
posterior_medians<-lapply(results,med_ext)
posterior_medians2<-data.frame(do.call(rbind,posterior_medians))
posterior_sds<-lapply(results,sd_ext)
posterior_sds2<-data.frame(do.call(rbind,posterior_sds))
names(posterior_medians2)<-c("Beta1","Beta2","Beta3","p")
names(posterior_sds2)<-c("sdBeta1","sdBeta2","sdBeta3","sdp")
head(pars1)
pars1B<-pars1[rep(1:nrow(pars1),each=1),]
dft<-cbind(pars1B)
test_data<-data.frame(dft[1:1000,],posterior_medians2,posterior_sds2)
head(test_data)
plot(abs(posterior_medians2[,3]),posterior_sds2[,3])
lines(x=c(-100,100),y=c(1,1))
lines(x=c(2.5,2.5),y=c(-100,100))
which(abs(posterior_medians2[,3])>2.5&posterior_sds2[,3]<1)
##Read in data
results<-list()
for(i in 1:2880){
results[[i]]<-eval(parse(text=paste0("readRDS('results/res",i,".RDS')")))
}
##Read in initial parameters
pars1<-readRDS("parameters2.RDS")
head(pars1)
##Function to extract posterior medians for all results
med_ext<-function(a){
if(class(a)=="list"){
medians<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
medians[i,]<-apply(a[[i]],2,median)
}
}
if(class(a)!="list"){
medians<-apply(a,2,median)
}
return(medians)
}
sd_ext<-function(a){
if(class(a)=="list"){
sds<-matrix(NA,nr=length(a),nc=ncol(a[[1]]))
for(i in 1:length(a)){
sds[i,]<-apply(a[[i]],2,sd)
}
}
if(class(a)!="list"){
sds<-apply(a,2,sd)
}
return(sds)
}
posterior_medians<-lapply(results,med_ext)
posterior_medians2<-data.frame(do.call(rbind,posterior_medians))
posterior_sds<-lapply(results,sd_ext)
posterior_sds2<-data.frame(do.call(rbind,posterior_sds))
names(posterior_medians2)<-c("Beta1","Beta2","Beta3","p")
names(posterior_sds2)<-c("sdBeta1","sdBeta2","sdBeta3","sdp")
head(pars1)
pars1B<-pars1[rep(1:nrow(pars1),each=1),]
dft<-cbind(pars1B)
test_data<-data.frame(dft[1:2880,],posterior_medians2,posterior_sds2)
head(test_data)
plot(abs(posterior_medians2[,3]),posterior_sds2[,3])
lines(x=c(-100,100),y=c(1,1))
lines(x=c(2.5,2.5),y=c(-100,100))
which(abs(posterior_medians2[,3])>2.5&posterior_sds2[,3]<1)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.4,0.8),lty=2)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~net_effs*ng,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~net_effs*ng,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
boxplot(Beta3~net_effs*ng,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~net_effs*ng*pcg,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
boxplot(Beta3~net_effs*ng*pcg,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~pcg*ng*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~pcg*ng*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~ng*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
head(test_data)
boxplot(sdBeta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~net_effs*net_vars,data=test_data[test_data$sdBeta3<0.5,])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~net_effs*ng,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~ng*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~ng*pcg*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~ng*pmi*net_effs,data=test_data[test_data$sdBeta3<0.55&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
unqieu(test_data$net_vars)
unique(test_data$net_vars)
boxplot(Beta3~net_effs*ng,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
boxplot(Beta3~ng*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,1))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~ng*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~ng*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="betweenness_w",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(sdBeta3~ng*pcg*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="betweenness_w",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(sdBeta3~ng*pmi*net_effs,data=test_data[test_data$sdBeta3<0.55&test_data$net_vars=="betweenness_w",])
head(test_data)
boxplot(Beta3~ng*pmi*pcg,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w"&test_data$net_effs==0.8,],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~ng*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
lines(x=c(-100,100),y=c(0.8,0.8),lty=2)
boxplot(Beta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~net_effs*net_vars,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5,])
boxplot(Beta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
lines(x=c(-100,100),y=c(0.09,0.09),lty=2)
boxplot(Beta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
lines(x=c(-100,100),y=c(0.09,0.09),lty=2)
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
lines(x=c(-100,100),y=c(0.09,0.09),lty=2)
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$Beta3<0.5&test_data$net_vars=="betweenness_w",])
boxplot(sdBeta3~pcg*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="betweenness_w",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
lines(x=c(-100,100),y=c(0.09,0.09),lty=2)
boxplot(sdBeta3~ng*pcg*net_effs,data=test_data[test_data$sdBeta3<0.5&test_data$net_vars=="betweenness_w",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
boxplot(sdBeta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.06,0.06),lty=2)
lines(x=c(-100,100),y=c(0.07,0.07),lty=2)
lines(x=c(-100,100),y=c(0.08,0.08),lty=2)
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",],ylim=c(-0.25,0.6))
boxplot(Beta3~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",],ylim=c(-0.25,0.6))
lines(x=c(-100,100),y=c(0,0))
lines(x=c(-100,100),y=c(0.1,0.1),lty=2)
lines(x=c(-100,100),y=c(0.2,0.2),lty=2)
lines(x=c(-100,100),y=c(0.3,0.3),lty=2)
lines(x=c(-100,100),y=c(0.4,0.4),lty=2)
boxplot(p~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
lines(x=c(-100,100),y=c(0,0))
boxplot(Beta1~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot(p~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot((Beta2-Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot((Beta2-Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot((Beta2-Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta2)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
boxplot(p~pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(p~pcg*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(Beta1~pcg*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
head(test_data)
boxplot(p~pcg*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(sdp~pcg*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(sdp~pcg*pmi*net_effs,data=test_data[sdp<0.025&test_data$net_vars=="strength",])
boxplot(sdp~pcg*pmi*net_effs,data=test_data[test_datasdp<0.025&test_data$net_vars=="strength",])
boxplot(sdp~pcg*pmi*net_effs,data=test_data[test_data$sdp<0.025&test_data$net_vars=="strength",])
boxplot(p~pcg*pmi*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="strength",])
boxplot(boot::inv.logit(Beta1)~ng*pcg*net_effs,data=test_data[test_data$Beta3<1.5&test_data$Beta3>-1.5&test_data$net_vars=="betweenness_w",])
install.packages("BayesTwin")
#install.packages("BayesTwin")
library(BayesTwin)
install.packages("HDInterval")
#install.packages("HDInterval")
library(HDInterval)
HPD(results[[1]][,3], cred_int = 0.89)
hdi(results[[1]][,3], cred_int = 0.89)
hdi(results[[10]][,3], cred_int = 0.89)
#install.packages("HDInterval")
library(HDInterval)
hdi(results[[10]][,3], cred_int = 0.89)
chain_info<-matrix(NA,nr=length(results),nc=3)
for(i in 1:length(results)){
chain_info[i,1:2]<-hdi(results[[i]][,3], cred_int = 0.89)
chain_info[i,3]<-sum(results[[i]][,3]>0)/nrow(results[[i]])
}
chain_info
boxplot(chain_info[,3]~test_data$net_effs)
boxplot(chain_info[,3]~test_data$net_effs*test_data$net_vars)
boxplot(chain_info[,3]~test_data$net_vars*test_data$net_effs)
chain_info<-matrix(NA,nr=length(results),nc=3)
for(i in 1:length(results)){
chain_info[i,1:2]<-hdi(results[[i]][,3], cred_int = 0.89)
chain_info[i,3]<-sum(results[[i]][,3]>0)/nrow(results[[i]])
chain_info[i,4]<-ifelse(0>chain_info[i,1]|0>chain_info[i,2],1,0)
}
chain_info<-matrix(NA,nr=length(results),nc=4)
for(i in 1:length(results)){
chain_info[i,1:2]<-hdi(results[[i]][,3], cred_int = 0.89)
chain_info[i,3]<-sum(results[[i]][,3]>0)/nrow(results[[i]])
chain_info[i,4]<-ifelse(0>chain_info[i,1]|0>chain_info[i,2],1,0)
}
boxplot(chain_info[,3]~test_data$net_vars*test_data$net_effs)
aggregate(chain_info[,4],by=list(test_data$net_effs,test_data$vars),mean)
dim(chain_info)
dim(test_data)
?aggregate
aggregate(chain_info[,4],by=list(test_data$net_effs,test_data$vars),mean)
aggregate(chain_info,by=list(test_data$net_effs,test_data$vars),mean)
chain_info[,4]
chain_info<-matrix(NA,nr=length(results),nc=4)
for(i in 1:length(results)){
chain_info[i,1:2]<-hdi(results[[i]][,3], cred_int = 0.89)
chain_info[i,3]<-sum(results[[i]][,3]>0)/nrow(results[[i]])
chain_info[i,4]<-ifelse(0<chain_info[i,1]|0>chain_info[i,2],1,0)
}
boxplot(chain_info[,3]~test_data$net_vars*test_data$net_effs)
?aggregate
aggregate(as.data,frame(chain_info[,4]),by=list(test_data$net_effs,test_data$vars),mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$net_effs,test_data$vars),mean)
as.data.frame(chain_info[,4])
dim(chain_info)
dim(test_data)
list(test_data$net_effs,test_data$vars)
aggregate(test_data$Beta1,by=list(test_data$net_effs,test_data$vars),mean)
aggregate(test_data$Beta1,by=list(test_data$net_effs,test_data$vars),FUN=mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$net_effs,test_data$net_vars),mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$net_effs,test_data$net_vars,test_data$pcg),mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$net_effs,test_data$net_vars,test_data$pcg,test_data$ng),mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$ng,test_data$pcg,test_data$net_vars,test_data$net_effs),mean)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$ng,test_data$pmi,test_data$pcg,test_data$net_vars,test_data$net_effs),mean)
head(test_data)
aggregate(as.data.frame(chain_info[,4]),by=list(test_data$pmi,test_data$pcg,test_data$net_vars,test_data$net_effs),mean)
install.packages("emdist")
#install.packages("emdist")
library(emdist)
emd(results[[1]][,3],results[[2]][,3])
emd(results[[1]],results[[2]])
a<-hist(results[[1]][,3])
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
a
b<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
emdist(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
b<-hist(results[[2]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
b<-hist(results[[20]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
b<-hist(results[[200]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
b<-hist(results[[2000]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
b<-hist(results[[2500]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-density(results[[1]][,3])
b<-density(results[[2500]][,3])
a
a$x
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
b<-hist(results[[2500]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-density(results[[1]][,3])
b<-density(results[[2500]][,3])
emd(cbind(a$y,a$x),cbind(b$y,b$x))
?emd
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
b<-hist(results[[2500]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-density(results[[1]][,3])
b<-density(results[[2500]][,3])
emd(cbind(a$y,a$x),cbind(b$y,b$x),max.iter=10000)
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
b<-hist(results[[250]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-density(results[[1]][,3])
b<-density(results[[250]][,3])
emd(cbind(a$y,a$x),cbind(b$y,b$x),max.iter=10000)
a<-hist(results[[1]][,3],breaks=seq(-1,1,0.02))
b<-hist(results[[2]][,3],breaks=seq(-1,1,0.02))
emd(cbind(a$counts,a$mids),cbind(b$counts,b$mids))
a<-density(results[[1]][,3])
b<-density(results[[2]][,3])
emd(cbind(a$y,a$x),cbind(b$y,b$x),max.iter=10000)
