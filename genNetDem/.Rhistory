install.packages("asnipe")
install.packages("roxygen2")
?matrix
?inv.logit
?rnorm
?car::inv.logit
?car::logit
?rnorm
?cap_dat_gen
?aggregate
?mvrnorm
?mvrnorm
?sd
?runif
?rpois
?par
?E
net<-graph.adjacency(matrix(c(0,2,2,0),nr=2,nc=2),mode="undirected")
net<-igraph::graph.adjacency(matrix(c(0,2,2,0),nr=2,nc=2),mode="undirected")
plot(net)
net<-graph.adjacency(matrix(c(0,2,2,0),nr=2,nc=2),mode="undirected",weighted=TRUE)
net<-igraph::graph.adjacency(matrix(c(0,2,2,0),nr=2,nc=2),mode="undirected",weighted=TRUE)
plot(net)
igraph::as.matrix.igraph(net,sparse=FALSE)
igraph::as.matrix(net,sparse=FALSE)
library(igraph)
igraph::as.matrix.igraph(net,sparse=FALSE)
as.matrix.igraph(net,sparse=FALSE)
?igraph::as.matrix.igraph(net)
igraph::as.matrix.igraph(net)
igraph::as_adjacency_matrix(net)
igraph::as_adjacency_matrix(net,sparse=FALSE)
igraph::as_adjacency_matrix(net,sparse=FALSE,attr="weight")
?rbeta
?dist
roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
?basic_survival
?get_network2
?indiv_info_add
?indiv_info_gen
roxygen2::roxygenize()
library(asnipe)
get_network
roxygen2::roxygenize()
testit <- function(){
warning("this function does nothing.")
warning("it's pretty useless.")
}
suppress_warning(testit(), "useless")  # Will suppress only the second warning by pattern
install.packages("pkgcond")
pkgcond::suppress_warning(testit(), "useless")  # Will suppress only the second warning by pattern
testit <- function(){
warning("this function does nothing.")
warning("it's pretty useless.")
}
pkgcond::suppress_warning(testit(), "useless")  # Will suppress only the second warning by pattern
roxygen2::roxygenise
roxygen2::roxygenise()
roxygen2::roxygenise()
library(genNetDem)
library(igraph)
g<-erdos.renyi.game(n=100,p.or.m=0.1,type="gnp",directed=TRUE,loops=FALSE)
g<-erdos.renyi.game(n=100,p.or.m=0.1,type="gnp",directed=TRUE,loops=FALSE)
g2<-graph.adjacency(t(as_adjacency_matrix(g,sparse=FALSE)),mode="directed")
g
g2
plot(page_rank(g2)~page_rank(g))
plot(page_rank(g2)$vector~page_rank(g)$vector)
plot(page_rank(g2)$vector~in_degree(g))
plot(page_rank(g2)$vector~indegree(g))
plot(page_rank(g2)$vector~degree(g,mode="in"))
plot(page_rank(g2)$vector~degree(g,mode="out"))
plot(page_rank(g2)$vector~degree(g2,mode="out"))
plot(page_rank(g2)$vector~degree(g2,mode="in"))
plot(page_rank(g)$vector~degree(g,mode="in"))
